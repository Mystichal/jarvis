# Nginx configuration
#include sites-enabled/*;

## To forward http to https
#server {
#	listen 80;
#	server_name jarvis.se www.jarvis.se;
#
#	return 301 https://$host$request_uri;
#}

##To use https
#server {
#    listen 443 ssl;
#    server_name jarvis.se www.jarvis.se;
#    root /var/www/html/jarvis;
#    index index.php index.htm index.html;
#
#    location / {
#        try_files $uri $uri/ /index.php;
#    }
#    
#    ssl on;
#    ssl_certificate /etc/ssl/mycertificate/letsencrypt/live/jarvis.se/fullchain.pem;
#    ssl_certificate_key /etc/ssl/mycertificate/letsencrypt/live/jarvis.se/privkey.pem;
#
#    location ~ \.php$ {
#        proxy_pass http://192.168.32.3:8069;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#    }
#    
#    location ~ /\. {
#        deny all;
#    }
#}

## For simple http
server {
    listen 80;
    server_name 192.168.32;

    location / {
        proxy_pass http://192.168.32.3:8069;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

		# kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }
}